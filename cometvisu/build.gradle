apply plugin: 'com.android.application'
apply plugin: 'jacoco'

buildscript {
    repositories {
        google()
        jcenter()
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 27
        versionCode project.versionCode.toInteger()
        versionName "$versionMajor.$versionMinor.$versionMicro$versionMicroSuffix-$versionBuildNumber"
        archivesBaseName = "$applicationName-$versionName"
    }
    
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            testCoverageEnabled true
        }
    }
    
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'LICENSE.txt'
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation "com.android.support:design:$androidDesignVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    implementation "com.android.support:recyclerview-v7:$recyclerViewVersion"
    implementation "com.google.firebase:firebase-core:$firebaseCoreVersion"
    implementation "com.google.firebase:firebase-messaging:$firebaseMessagingVersion"

    testImplementation ("junit:junit:$junitVersion") {
        exclude module: 'hamcrest-core'
    }
    testImplementation "org.robolectric:robolectric:$robotectricVersion"
    testImplementation "org.hamcrest:hamcrest-integration:$hamcrestVersion"
    testImplementation "org.hamcrest:hamcrest-core:$hamcrestVersion"
    testImplementation "org.hamcrest:hamcrest-library:$hamcrestVersion"
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    reports {
        xml.enabled true
        html.enabled true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = files("${buildDir}/jacoco/testDebugUnitTest.exec")
}

task copyDebugApk(type: Copy) {
    from "$projectDir/build/outputs/apk/debug/"
    into "$projectDir/build/outputs/apk/"
    include '*debug.apk'
    rename { String fileName ->
        fileName.replace('-debug', '')
    }
}

gradle.projectsEvaluated {
    assembleDebug.finalizedBy copyDebugApk
}

apply plugin: 'com.google.gms.google-services'