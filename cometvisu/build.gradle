apply plugin: 'com.android.application'
apply plugin: 'jacoco'

android {
    compileSdkVersion 21
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 19
        versionCode 2
        versionName "1.4"
    }
    
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            testCoverageEnabled true
        }
    }
    
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'LICENSE.txt'
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile 'com.android.support:support-v4:21.0.3'
    compile 'com.google.firebase:firebase-messaging:10.0.1'

    testCompile('junit:junit:4.+') {
        exclude module: 'hamcrest-core'
    }
    testCompile 'org.robolectric:robolectric:3.6.1'
    testCompile 'org.hamcrest:hamcrest-integration:1.+'
    testCompile 'org.hamcrest:hamcrest-core:1.+'
    testCompile 'org.hamcrest:hamcrest-library:1.+'
}

task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
    reports {
        xml.enabled true
        html.enabled true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = files("${buildDir}/jacoco/testDebugUnitTest.exec")
}

apply plugin: 'com.google.gms.google-services'